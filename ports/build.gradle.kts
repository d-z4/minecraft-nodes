/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

// disable default versioning
version = ""

// custom versioning flag
val VERSION = "0.0.13"

// base of output jar name
val OUTPUT_JAR_NAME = "nodes-ports"


plugins {
    // paperweight for nms
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.17"
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "2.3.0-Beta1"
    id("com.gradleup.shadow") version "8.3.6"
    // maven() // no longer needed in gradle 7
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    // paper
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public")
    }
    maven {
        url = uri("https://ci.ender.zone/plugin/repository/everything")
    }
}


configurations {
    create("resolvableImplementation") {
        isCanBeResolved = true
        isCanBeConsumed = true
    }
}

val instrumentedClasspath by configurations.creating {
    isCanBeConsumed = false
    isCanBeResolved = true
}

dependencies {
    // Align versions of all Kotlin components
    compileOnly(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // google json
    // compileOnly("com.google.code.gson:gson:2.8.6")

    // nodes (local repo)
    implementation(project(":nodes"))

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // java must be up to 21 for 1.21
    java.toolchain.languageVersion.set(JavaLanguageVersion.of(21))
    // nms
    paperweight.paperDevBundle("1.21.5-R0.1-SNAPSHOT")
    // spigot/paper api
    compileOnly("io.papermc.paper:paper-api:1.21.10-R0.1-SNAPSHOT")

    tasks {
        assemble {
            dependsOn(reobfJar)
        }
    }

    tasks.named("reobfJar") {
        dependsOn(tasks.jar)
        base.archivesBaseName = "${OUTPUT_JAR_NAME}-${VERSION}"
    }
}

tasks {
    named<ShadowJar>("shadowJar") {

        archiveClassifier.set("")
        configurations = mutableListOf(project.configurations.named("resolvableImplementation").get()) as List<FileCollection>
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }

    test {
        testLogging.showStandardStreams = true
    }
}

gradle.taskGraph.whenReady {
    tasks {
        named<ShadowJar>("shadowJar") {
            // baseName = "${OUTPUT_JAR_NAME}-${target}"
            archiveBaseName.set("${OUTPUT_JAR_NAME}-${VERSION}")
            minimize() // FOR PRODUCTION USE MINIMIZE
        }
    }
}
